from fastapi import APIRouter, Request, Depends
from fastapi.responses import HTMLResponse, RedirectResponse
from sqlalchemy.orm import Session
from database.db import get_db
from app.models.aluno import Aluno
from fastapi.templating import Jinja2Templates
from starlette.status import HTTP_303_SEE_OTHER

router = APIRouter()
templates = Jinja2Templates(directory="templates")

@router.get("/aluno", response_class=HTMLResponse)
def listar_alunos(request: Request, db: Session = Depends(get_db)):
    alunos = db.query(Aluno).all()
    return templates.TemplateResponse("aluno.html", {"request": request, "alunos": alunos})

@router.post("/aluno/adicionar", response_class=HTMLResponse)
async def adicionar_aluno(request: Request, db: Session = Depends(get_db)):
    form = await request.form()
    novo_aluno = Aluno(nome=form["nome"], email=form["email"], telefone=form["telefone"])
    db.add(novo_aluno)
    db.commit()
    return RedirectResponse(url="/aluno", status_code=HTTP_303_SEE_OTHER)

@router.get("/aluno/deletar/{aluno_id}", response_class=HTMLResponse)
def deletar_aluno(aluno_id: int, db: Session = Depends(get_db)):
    aluno = db.query(Aluno).filter(Aluno.id == aluno_id).first()
    if aluno:
        db.delete(aluno)
        db.commit()
    return RedirectResponse(url="/aluno", status_code=HTTP_303_SEE_OTHER)
